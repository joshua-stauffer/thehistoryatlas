name: "Test Services"

on:
  pull_request:
    branches:
      - dev

jobs:

  build-writemodel:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: ./writemodel
          build-contexts: |
            pylib=./pylib
            testlib=./testlib
          file: ./pylib/Dockerfile
          tags: ilriccio/thehistoryatlas:test-writemodel
          outputs: type=docker,dest=/tmp/writemodel.tar
      -
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: writemodel-image
          path: /tmp/writemodel.tar


  Test-WriteModel:
    needs: build-writemodel
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Download Writemodel
        uses: actions/download-artifact@v2
        with:
          name: writemodel-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/writemodel.tar
          docker image ls -a

      - name: Setup Test Environment
        env:
          POSTGRES_PASS: ${{ secrets.POSTGRES_PASS }}
        run: docker compose -f service_tests.yaml up db -d

      - name: Test WriteModel
        env:
          TEST_DB_URI: ${{ secrets.TEST_DB_URI }}
        run: |
          docker compose 
          -f service_tests.yaml up 
          --exit-code-from writemodel

  Test-EventStore:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

#      - name: Download Pylib
#        uses: actions/download-artifact@v2
#        with:
#          name: pylib-image
#          path: /tmp
#
#      - name: Load Docker image
#        run: |
#          docker load --input /tmp/pylib.tar
#          docker image ls -a

      - name: Setup Test Environment
        env:
          POSTGRES_PASS: ${{ secrets.POSTGRES_PASS }}
        run: docker compose -f service_tests.yaml up db -d

      - name: Test EventStore
        env:
          TEST_DB_URI: ${{ secrets.TEST_DB_URI }}
        run: |
          docker compose -f service_tests.yaml up 
          --build-context pylib=./pylib
          --build-context testlib=./testlib
          --build eventstore 
          --exit-code-from eventstore

  Test-History:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

#      - name: Download Pylib
#        uses: actions/download-artifact@v2
#        with:
#          name: pylib-image
#          path: /tmp
#
#      - name: Load Pylib
#        run: |
#          docker load --input /tmp/pylib.tar
#          docker image ls -a
#
#      - name: Download Testlib
#        uses: actions/download-artifact@v2
#        with:
#          name: testlib-image
#          path: /tmp
#
#      - name: Load Testlib
#        run: |
#          docker load --input /tmp/testlib.tar
#          docker image ls -a

      - name: Setup Test Environment
        env:
          POSTGRES_PASS: ${{ secrets.POSTGRES_PASS }}
        run: docker compose -f service_tests.yaml up db -d

      - name: Test History
        env:
          TEST_DB_URI: ${{ secrets.TEST_DB_URI }}
        run: |
          docker compose -f service_tests.yaml up 
          --build-context pylib=./pylib
          --build-context testlib=./testlib
          --build history 
          --exit-code-from history

  Test-ReadModel:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
#
#      - name: Download Pylib
#        uses: actions/download-artifact@v2
#        with:
#          name: pylib-image
#          path: /tmp
#
#      - name: Load Docker image
#        run: |
#          docker load --input /tmp/pylib.tar
#          docker image ls -a

      - name: Setup Test Environment
        env:
          POSTGRES_PASS: ${{ secrets.POSTGRES_PASS }}
        run: docker compose -f service_tests.yaml up db -d

      - name: Test ReadModel
        env:
          TEST_DB_URI: ${{ secrets.TEST_DB_URI }}
        run: |
          docker compose -f service_tests.yaml up 
          --build-context pylib=./pylib
          --build-context testlib=./testlib
          --build readmodel 
          --exit-code-from readmodel

  Test-Accounts-Service:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

#      - name: Download Pylib
#        uses: actions/download-artifact@v2
#        with:
#          name: pylib-image
#          path: /tmp
#
#      - name: Load Docker image
#        run: |
#          docker load --input /tmp/pylib.tar
#          docker image ls -a

      - name: Setup Test Environment
        env:
          POSTGRES_PASS: ${{ secrets.POSTGRES_PASS }}
        run: docker compose -f service_tests.yaml up db -d

      - name: Test Accounts
        env:
          TEST_DB_URI: ${{ secrets.TEST_DB_URI }}
          TTL: ${{ secrets.ACCOUNTS_TTL }}
          REFRESH_BY: ${{ secrets.ACCOUNTS_REFRESH_BY }}
          SEC_KEY: ${{ secrets.ACCOUNTS_SEC_KEY }}
        run: |
          docker compose -f service_tests.yaml up 
          --build-context pylib=./pylib
          --build-context testlib=./testlib
          --build accounts 
          --exit-code-from accounts

#      - name: Test Geo
#        env:
#          TEST_DB_URI: ${{ secrets.TEST_DB_URI }}
#        run: |
#          docker compose -f service_tests.yaml up --build geo --exit-code-from geo


#      - name: Test NLP
#        env:
#          TEST_DB_URI: ${{ secrets.TEST_DB_URI }}
#        run: |
#          docker compose -f service_tests.yaml up --build nlp --exit-code-from nlp