
scalar UUID


input EventFeedInput {
    eventID: UUID
    entityFilters: [UUID!]
    lookAheadCount: Int
    lookBehindCount: Int
}

type Event {
    id: UUID!
    text: String!
    lang: String!
    sources: [Source!]!
    tags: [Tag!]
    map: Map!
}

union Entity = Person | Place | Time

interface EntityTag {
    id: UUID!
    startChar: Int!
    stopChar: Int!
    name: String!
}

type Person implements EntityTag {
    id: UUID!
    startChar: Int!
    stopChar: Int!
    name: String!
}

type Place implements EntityTag {
    id: UUID!
    startChar: Int!
    stopChar: Int!
    name: String!
    location: Location!
}

type Time implements EntityTag {
    id: UUID!
    startChar: Int!
    stopChar: Int!
    name: String!
    time: String!
    calendar: String!
    precision: Int!
}

type Map {
    locations: [Location!]!
    center: Coordinates!
}

union Location = Coordinates | GeoShape

type Coordinates {
    latitude: Float!
    longitude: Float!
}

type GeoShape {
    value: String!
}

union MapValue = MapPoint | MapShape

type MapPoint {
    id: UUID!
    longitude: Float!
    latitude: Float!
    name: String!
}

type MapShape {
    id: UUID!
    name: String!
    geoShape: String!
}

###

type Summary {
    guid: String!
    text: String!
    tags: [Tag!]!
    citation_guids: [String!]!
}

type CitationByGUID {
    citation_guid: String
}

type Citation {
    guid: String!
    text: String!
    # tags: [Tag!]!
    meta: MetaData!
}

type Manifest {
    guid: String!
    citation_guids: [String]
    timeline: [Timeline]!
}

type Timeline {
    year: Int!
    count: Int!
    root_guid: String!
}

type GUIDSummaries {
    guids: [String]
    summaries: [GUIDSummary]
}

type GUIDSummary {
    type: String
    guid: String
    citation_count: Int
    names: [String]
    first_citation_date: String
    last_citation_date: String
}

type EntitySummary {
    type: EntityType!
    guid: String!
    citation_count: Int!
    names: [String!]!
    first_citation_date: String!
    last_citation_date: String!
}

type Tag {
    tag_type: EntityType!
    tag_guid: String! # which entity does this tag refer to?
    start_char: Int! # index of character in text
    stop_char: Int! # index of character in text
    name: String
    names: [String]
    coords: Coords
}

type MetaData {
    title: String!
    author: String!
    publisher: String!
    pubDate: String
    pageNum: Int
}

enum EntityType {
    TIME
    PERSON
    PLACE
}

type FuzzySearchResponse {
    name: String!
    guids: [String]!
}


type DefaultEntity {
    id: String!
    type: EntityType!
    name: String!
}

type Source {
    id: String!
    title: String!
    author: String!
    publisher: String!
    pubDate: String!
}

type Coords {
    latitude: Float
    longitude: Float
    geoshape: String
}

type GeoResponse {
    longitude: Float
    latitude: Float
    geoshape: String
}

type PlaceByCoordsResponse {
    latitude: Float!
    longitude: Float!
    guid: String
}
