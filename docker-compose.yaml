version: "3.9"
services:
    broker:
        image: "rabbitmq:3-management"
        networks:
            - tha-connect
        ports:
            - "5672:5672"
            - "15672:15672"
    api:
        depends_on:
            - broker
            - writemodel
            - readmodel
            - eventstore
        build: ./api
        ports:
            - "4000:4000"
        networks:
            - tha-connect
    readmodel:
        depends_on:
            - db
            - broker
            - history
        build:
            context: ./readmodel
            args:
                test: "True"
        environment:
            - PROD_DB_URI=postgresql+psycopg2://postgres:hardpass123@db:5432/readmodel
            - CONFIG=PRODUCTION
        networks:
            - tha-connect
#        volumes:
#            - readmodel:/data/db

    writemodel:
        depends_on:
            - db
            - broker
            - history
            - eventstore
        build: 
            context: ./writemodel
            args:
                test: "True"
        networks:
            - tha-connect
        environment:
            - PROD_DB_URI=postgresql+psycopg2://postgres:hardpass123@db:5432/writemodel
            - CONFIG=PRODUCTION
        # volumes:
        #     - writemodel:/data/db
    eventstore:
        depends_on:
            - broker
        build:
            context: ./eventstore
            args:
                test: "False"
        networks:
            - tha-connect
        volumes:
            - teststore:/data/db
    history:
        depends_on: 
            - broker
        build:
            context: ./history
            args:
                test: "False"
        networks: 
            - tha-connect
        volumes:
            - teststore:/data/db
    nlp:
        depends_on: 
            - broker
        build:
            context: ./nlp
        environment: 
            - TESTING=False
        networks: 
            - tha-connect
        volumes:
            - models:/app/models
    geo:
        depends_on: 
            - broker
        build:
            context: ./geo
            args:
                test: "False"
        environment:
            - PROD_DB_URI=postgresql+psycopg2://postgres:hardpass123@db:5432/geo
            - CONFIG=PRODUCTION
            - DEV_DB_URI=sqlite:////etc/db/geo.db
            # choose between one of the following two city lists:
            # cities500 is much more comprehensive, and also requires a much longer build.
            - GEONAMES_URL=https://download.geonames.org/export/dump/cities15000.zip
            # - GEONAMES_URL=https://download.geonames.org/export/dump/cities500.zip
        networks: 
            - tha-connect
        # volumes:
        #     - geodb:/etc/db
    accounts:
        depends_on:
            - broker
            - db
        build:
            context: ./accounts
            args:
                test: "False"
        environment:
            - PROD_DB_URI=postgresql+psycopg2://postgres:hardpass123@db:5432/accounts
            - CONFIG=PRODUCTION
            - DEV_DB_URI=sqlite:////etc/db/accounts.db
        networks:
            - tha-connect
        # volumes:
        #     - accounts:/etc/db
    db:
        image: postgres
        restart: always
        environment:
            - POSTGRES_PASSWORD=hardpass123
        networks:
            - tha-connect
        ports:
            - 5432:5432
        volumes:
            - db:/var/lib/postgresql/data

    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080
        networks:
            - tha-connect

volumes:
    # broker:
    teststore:
    models:
    geodb:
    readmodel:
    writemodel:
    accounts:
    db:      # postgres
networks:
    tha-connect:
